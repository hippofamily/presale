[{"/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/candy-machine-mint/src/index.tsx":"1","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/candy-machine-mint/src/reportWebVitals.ts":"2","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/candy-machine-mint/src/App.tsx":"3","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/candy-machine-mint/src/Home.tsx":"4","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/candy-machine-mint/src/candy-machine.ts":"5","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/candy-machine-mint/src/components/navbar.jsx":"6","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/candy-machine-mint/src/components/header.tsx":"7","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/candy-machine-mint/src/components/about.tsx":"8","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/candy-machine-mint/src/components/contact.tsx":"9","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/candy-machine-mint/src/components/roadmap.tsx":"10","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/candy-machine-mint/src/components/faq.tsx":"11","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft/src/index.tsx":"12","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft/src/reportWebVitals.ts":"13","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft/src/App.tsx":"14","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft/src/components/about.tsx":"15","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft/src/components/faq.tsx":"16","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft/src/components/contact.tsx":"17","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft/src/components/roadmap.tsx":"18","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft/src/components/header.tsx":"19","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft/src/components/navbar.jsx":"20","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft/src/Home.tsx":"21","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft/src/candy-machine.ts":"22","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft-presale/src/index.tsx":"23","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft-presale/src/reportWebVitals.ts":"24","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft-presale/src/App.tsx":"25","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft-presale/src/components/header.tsx":"26","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft-presale/src/Home.tsx":"27","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft-presale/src/candy-machine.ts":"28"},{"size":500,"mtime":1631671804702,"results":"29","hashOfConfig":"30"},{"size":425,"mtime":1631671804703,"results":"31","hashOfConfig":"30"},{"size":587,"mtime":1632734183148,"results":"32","hashOfConfig":"30"},{"size":7001,"mtime":1632750326160,"results":"33","hashOfConfig":"30"},{"size":8361,"mtime":1631671804701,"results":"34","hashOfConfig":"30"},{"size":1579,"mtime":1632733897568,"results":"35","hashOfConfig":"30"},{"size":3160,"mtime":1632750140729,"results":"36","hashOfConfig":"30"},{"size":1244,"mtime":1632470841763,"results":"37","hashOfConfig":"30"},{"size":1607,"mtime":1632731850435,"results":"38","hashOfConfig":"30"},{"size":996,"mtime":1632734857604,"results":"39","hashOfConfig":"30"},{"size":2249,"mtime":1632734837126,"results":"40","hashOfConfig":"30"},{"size":500,"mtime":1631671804702,"results":"41","hashOfConfig":"42"},{"size":425,"mtime":1631671804703,"results":"43","hashOfConfig":"42"},{"size":552,"mtime":1633001948593,"results":"44","hashOfConfig":"42"},{"size":1244,"mtime":1632470841763,"results":"45","hashOfConfig":"42"},{"size":1970,"mtime":1634918636582,"results":"46","hashOfConfig":"42"},{"size":1690,"mtime":1633001853476,"results":"47","hashOfConfig":"42"},{"size":1153,"mtime":1634099850394,"results":"48","hashOfConfig":"42"},{"size":3161,"mtime":1635503506440,"results":"49","hashOfConfig":"42"},{"size":1579,"mtime":1632733897568,"results":"50","hashOfConfig":"42"},{"size":7126,"mtime":1633012957834,"results":"51","hashOfConfig":"42"},{"size":8490,"mtime":1632999822522,"results":"52","hashOfConfig":"42"},{"size":500,"mtime":1631671804702,"results":"53","hashOfConfig":"54"},{"size":425,"mtime":1631671804703,"results":"55","hashOfConfig":"54"},{"size":265,"mtime":1635593488376,"results":"56","hashOfConfig":"54"},{"size":3161,"mtime":1635503506440,"results":"57","hashOfConfig":"54"},{"size":7096,"mtime":1635591109948,"results":"58","hashOfConfig":"54"},{"size":8490,"mtime":1632999822522,"results":"59","hashOfConfig":"54"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"jps791",{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"81","usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sg4hnv",{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"m6eusq",{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/candy-machine-mint/src/index.tsx",[],["123","124"],"/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/candy-machine-mint/src/reportWebVitals.ts",[],"/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/candy-machine-mint/src/App.tsx",["125","126"],"import { useState, useEffect } from \"react\";\nimport Navbar from \"./components/navbar\";\nimport Header from \"./components/header\";\nimport About from \"./components/about\";\nimport Faq from \"./components/faq\";\nimport Contact from \"./components/contact\";\nimport Roadmap from \"./components/roadmap\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [landingPageData, setLandingPageData] = useState({});\n  useEffect(() => {\n  }, []);\n\n  return (\n    <div>\n      <Navbar />\n      <Header />\n      <About/>\n      <Roadmap />\n      <Faq />\n      <Contact />\n    </div>\n  );\n};\n\nexport default App;\n","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/candy-machine-mint/src/Home.tsx",[],"/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/candy-machine-mint/src/candy-machine.ts",[],"/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/candy-machine-mint/src/components/navbar.jsx",[],["127","128"],"/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/candy-machine-mint/src/components/header.tsx",[],"/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/candy-machine-mint/src/components/about.tsx",[],"/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/candy-machine-mint/src/components/contact.tsx",["129","130","131"],"export const Contact = () => {\n  return (\n    <div>\n      <div id=\"contact\">\n        <div className=\"container\">\n          <div className=\"col-md-12\">\n            <div className=\"row\">\n              <p>Our community grows stronger every day.</p>\n              <p>\n                Please follow our social platforms to get the most up-to-date,\n                accurate HippoFamily information. </p>\n              <p>\n                {\" \"}Using the links below, you can join\n                our various groups.\n              </p>\n              <div className=\"social\">\n                <ul>\n                  <li>\n                    <a href=\"https://discord.gg/sk3xN3sA8D\" target=\"_blank\">\n                    <img src=\"img/discord-icon.png\" alt=\"\" width=\"64px\" height=\"64px\"/>\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"https://twitter.com/HippoFamilyNFT\" target=\"_blank\">\n                    <img src=\"img/twitter-icon.png\" alt=\"\" width=\"64px\" height=\"64px\"/>\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"https://instagram.com/hippofamilynft\" target=\"_blank\">\n                    <img src=\"img/instagram-icon.png\" alt=\"\" width=\"64px\" height=\"64px\"/>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div id=\"footer\">\n        <div className=\"container text-center\">\n          <p>&copy; 2021 Hippo Family </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Contact;\n","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/candy-machine-mint/src/components/roadmap.tsx",[],"/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/candy-machine-mint/src/components/faq.tsx",[],"/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft/src/index.tsx",[],"/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft/src/reportWebVitals.ts",[],"/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft/src/App.tsx",["132"],"import { useState, useEffect } from \"react\";\nimport Navbar from \"./components/navbar\";\nimport Header from \"./components/header\";\nimport About from \"./components/about\";\nimport Faq from \"./components/faq\";\nimport Contact from \"./components/contact\";\nimport Roadmap from \"./components/roadmap\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [] = useState({});\n  useEffect(() => {\n  }, []);\n\n  return (\n    <div>\n      <Navbar />\n      <Header />\n      <About/>\n      <Roadmap />\n      <Faq />\n      <Contact />\n    </div>\n  );\n};\n\nexport default App;\n","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft/src/components/about.tsx",[],"/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft/src/components/faq.tsx",[],"/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft/src/components/contact.tsx",[],"/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft/src/components/roadmap.tsx",[],"/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft/src/components/header.tsx",[],"/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft/src/components/navbar.jsx",[],"/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft/src/Home.tsx",["133","134"],"import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Countdown from \"react-countdown\";\nimport { Button, CircularProgress, Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport * as anchor from \"@project-serum/anchor\";\n\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n\nimport { useAnchorWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\n\nimport {\n  CandyMachine,\n  awaitTransactionSignatureConfirmation,\n  getCandyMachineState,\n  mintOneToken,\n  shortenAddress,\n} from \"./candy-machine\";\n\nconst ConnectButton = styled(WalletDialogButton)`\nfont-family: \"Balsamiq Sans\";\ntext-transform: uppercase;\ncolor: #fff;\nbackground-color: #5ca9fb;\nbackground-image: linear-gradient(to right, #5ca9fb 0%, #6372ff 100%);\npadding: 14px 34px;\nletter-spacing: 1px;\nmargin: 0;\nfont-size: 48px;\nfont-weight: 500;\nborder-radius: 25px;\ntransition: all 0.5s linear;\nborder: 0;\n`;\n\nconst CounterText = styled.span`\n\n`; // add your styles here\n\nconst MintContainer = styled.div`\n`; // add your styles here\n\nconst MintButton = styled(Button)`\nfont-family: \"Balsamiq Sans\";\ntext-transform: uppercase;\ncolor: #fff;\nbackground-color: #5ca9fb;\nbackground-image: linear-gradient(to right, #5ca9fb 0%, #6372ff 100%);\npadding: 14px 34px;\nletter-spacing: 1px;\nmargin: 0;\nfont-size: 48px;\nfont-weight: 500;\nborder-radius: 25px;\ntransition: all 0.5s linear;\nborder: 0;`; // add your styles here\n\nexport interface HomeProps {\n  candyMachineId: anchor.web3.PublicKey;\n  config: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  startDate: number;\n  treasury: anchor.web3.PublicKey;\n  txTimeout: number;\n}\n\nconst Home = (props: HomeProps) => {\n  const [balance, setBalance] = useState<number>();\n  const [isActive, setIsActive] = useState(false); // true when countdown completes\n  const [isSoldOut, setIsSoldOut] = useState(false); // true when items remaining is zero\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\n\n  const [itemsAvailable, setItemsAvailable] = useState(0);\n  //const [itemsRedeemed, setItemsRedeemed] = useState(0);\n  const [itemsRemaining, setItemsRemaining] = useState(0);\n\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: \"\",\n    severity: undefined,\n  });\n\n  const [startDate, setStartDate] = useState(new Date(props.startDate));\n\n  const wallet = useAnchorWallet();\n  const [candyMachine, setCandyMachine] = useState<CandyMachine>();\n\n  const onMint = async () => {\n    try {\n      setIsMinting(true);\n      if (wallet && candyMachine?.program) {\n        const mintTxId = await mintOneToken(\n          candyMachine,\n          props.config,\n          wallet.publicKey,\n          props.treasury\n        );\n\n        const status = await awaitTransactionSignatureConfirmation(\n          mintTxId,\n          props.txTimeout,\n          props.connection,\n          \"singleGossip\",\n          false\n        );\n\n        if (!status?.err) {\n          setAlertState({\n            open: true,\n            message: \"Congratulations! Mint succeeded!\",\n            severity: \"success\",\n          });\n        } else {\n          setAlertState({\n            open: true,\n            message: \"Mint failed! Please try again!\",\n            severity: \"error\",\n          });\n        }\n      }\n    } catch (error: any) {\n      // TODO: blech:\n      let message = error.msg || \"Minting failed! Please try again!\";\n      if (!error.msg) {\n        if (error.message.indexOf(\"0x138\")) {\n        } else if (error.message.indexOf(\"0x137\")) {\n          message = `SOLD OUT!`;\n        } else if (error.message.indexOf(\"0x135\")) {\n          message = `Insufficient funds to mint. Please fund your wallet.`;\n        }\n      } else {\n        if (error.code === 311) {\n          message = `SOLD OUT!`;\n          setIsSoldOut(true);\n        } else if (error.code === 312) {\n          message = `Minting period hasn't started yet.`;\n        }\n      }\n\n      setAlertState({\n        open: true,\n        message,\n        severity: \"error\",\n      });\n    } finally {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n      setIsMinting(false);\n      setIsActive(false);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n    })();\n  }, [wallet, props.connection]);\n\n  useEffect(() => {\n    (async () => {\n      if (!wallet) return;\n\n      const {\n        candyMachine,\n        goLiveDate,\n        itemsAvailable,\n        itemsRemaining,\n        //itemsRedeemed,\n      } = await getCandyMachineState(\n        wallet as anchor.Wallet,\n        props.candyMachineId,\n        props.connection\n      );\n\n      setItemsAvailable(itemsAvailable);\n      setItemsRemaining(itemsRemaining);\n      //setItemsRedeemed(itemsRedeemed);\n      setIsActive(false);\n\n      setIsSoldOut(itemsRemaining === 0);\n      setStartDate(goLiveDate);\n      setCandyMachine(candyMachine);\n    })();\n  }, [wallet, props.candyMachineId, props.connection]);\n\n  return (\n    <main>\n      {wallet && (\n        <p>Wallet: {shortenAddress(wallet.publicKey.toBase58() || \"\")}</p>\n      )}\n\n      {wallet && <p>Your SOL Balance: {(balance || 0).toLocaleString()} SOL</p>}\n\n      {/* {wallet && <p>Total Available: {itemsRemaining} / {itemsAvailable}</p>} */}\n\n\n      <MintContainer>\n        {!wallet ? (\n          <ConnectButton>Connect Wallet</ConnectButton>\n        ) : (\n          <MintButton\n            disabled={isSoldOut || isMinting || !isActive}\n            onClick={onMint}\n            variant=\"contained\"\n          >\n            { \n            isSoldOut ? (\n              \"SOLD OUT\"\n            ) : isActive ? (\n              isMinting ? (\n                <CircularProgress />\n              ) : (\n                \"MINT\"\n              )\n            ) : (\n              <Countdown\n                date={startDate}\n                onMount={({ completed }) => completed && setIsActive(true)}\n                onComplete={() => setIsActive(true)}\n                renderer={renderCounter}\n              />\n            )}\n          </MintButton>\n        )}\n      </MintContainer>\n\n      <Snackbar\n        open={alertState.open}\n        autoHideDuration={6000}\n        onClose={() => setAlertState({ ...alertState, open: false })}\n      >\n        <Alert\n          onClose={() => setAlertState({ ...alertState, open: false })}\n          severity={alertState.severity}\n        >\n          {alertState.message}\n        </Alert>\n      </Snackbar>\n    </main>\n  );\n};\n\ninterface AlertState {\n  open: boolean;\n  message: string;\n  severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\n}\n\nconst renderCounter = ({ days, hours, minutes, seconds, completed }: any) => {\n  return (\n    <CounterText>\n      {days} Days ,{hours} hours, {minutes} minutes, {seconds} seconds\n    </CounterText>\n  );\n};\n\nexport default Home;","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft/src/candy-machine.ts",[],"/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft-presale/src/index.tsx",[],"/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft-presale/src/reportWebVitals.ts",[],"/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft-presale/src/App.tsx",["135"],"/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft-presale/src/components/header.tsx",[],"/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft-presale/src/Home.tsx",["136"],"import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Countdown from \"react-countdown\";\nimport { Button, CircularProgress, Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport * as anchor from \"@project-serum/anchor\";\n\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n\nimport { useAnchorWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\n\nimport {\n  CandyMachine,\n  awaitTransactionSignatureConfirmation,\n  getCandyMachineState,\n  mintOneToken,\n  shortenAddress,\n} from \"./candy-machine\";\n\nconst ConnectButton = styled(WalletDialogButton)`\nfont-family: \"Balsamiq Sans\";\ntext-transform: uppercase;\ncolor: #fff;\nbackground-color: #5ca9fb;\nbackground-image: linear-gradient(to right, #5ca9fb 0%, #6372ff 100%);\npadding: 14px 34px;\nletter-spacing: 1px;\nmargin: 0;\nfont-size: 48px;\nfont-weight: 500;\nborder-radius: 25px;\ntransition: all 0.5s linear;\nborder: 0;\n`;\n\nconst CounterText = styled.span`\n\n`; // add your styles here\n\nconst MintContainer = styled.div`\n`; // add your styles here\n\nconst MintButton = styled(Button)`\nfont-family: \"Balsamiq Sans\";\ntext-transform: uppercase;\ncolor: #fff;\nbackground-color: #5ca9fb;\nbackground-image: linear-gradient(to right, #5ca9fb 0%, #6372ff 100%);\npadding: 14px 34px;\nletter-spacing: 1px;\nmargin: 0;\nfont-size: 48px;\nfont-weight: 500;\nborder-radius: 25px;\ntransition: all 0.5s linear;\nborder: 0;`; // add your styles here\n\nexport interface HomeProps {\n  candyMachineId: anchor.web3.PublicKey;\n  config: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  startDate: number;\n  treasury: anchor.web3.PublicKey;\n  txTimeout: number;\n}\n\nconst Home = (props: HomeProps) => {\n  const [balance, setBalance] = useState<number>();\n  const [isActive, setIsActive] = useState(false); // true when countdown completes\n  const [isSoldOut, setIsSoldOut] = useState(false); // true when items remaining is zero\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\n\n  const [itemsAvailable, setItemsAvailable] = useState(0);\n  //const [itemsRedeemed, setItemsRedeemed] = useState(0);\n  const [itemsRemaining, setItemsRemaining] = useState(0);\n\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: \"\",\n    severity: undefined,\n  });\n\n  const [startDate, setStartDate] = useState(new Date(props.startDate));\n\n  const wallet = useAnchorWallet();\n  const [candyMachine, setCandyMachine] = useState<CandyMachine>();\n\n  const onMint = async () => {\n    try {\n      setIsMinting(true);\n      if (wallet && candyMachine?.program) {\n        const mintTxId = await mintOneToken(\n          candyMachine,\n          props.config,\n          wallet.publicKey,\n          props.treasury\n        );\n\n        const status = await awaitTransactionSignatureConfirmation(\n          mintTxId,\n          props.txTimeout,\n          props.connection,\n          \"singleGossip\",\n          false\n        );\n\n        if (!status?.err) {\n          setAlertState({\n            open: true,\n            message: \"Congratulations! Mint succeeded!\",\n            severity: \"success\",\n          });\n        } else {\n          setAlertState({\n            open: true,\n            message: \"Mint failed! Please try again!\",\n            severity: \"error\",\n          });\n        }\n      }\n    } catch (error: any) {\n      // TODO: blech:\n      let message = error.msg || \"Minting failed! Please try again!\";\n      if (!error.msg) {\n        if (error.message.indexOf(\"0x138\")) {\n        } else if (error.message.indexOf(\"0x137\")) {\n          message = `SOLD OUT!`;\n        } else if (error.message.indexOf(\"0x135\")) {\n          message = `Insufficient funds to mint. Please fund your wallet.`;\n        }\n      } else {\n        if (error.code === 311) {\n          message = `SOLD OUT!`;\n          setIsSoldOut(true);\n        } else if (error.code === 312) {\n          message = `Minting period hasn't started yet.`;\n        }\n      }\n\n      setAlertState({\n        open: true,\n        message,\n        severity: \"error\",\n      });\n    } finally {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n      setIsMinting(false);\n      setIsActive(false);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n    })();\n  }, [wallet, props.connection]);\n\n  useEffect(() => {\n    (async () => {\n      if (!wallet) return;\n\n      const {\n        candyMachine,\n        goLiveDate,\n        itemsAvailable,\n        itemsRemaining,\n        //itemsRedeemed,\n      } = await getCandyMachineState(\n        wallet as anchor.Wallet,\n        props.candyMachineId,\n        props.connection\n      );\n\n      setItemsAvailable(itemsAvailable);\n      setItemsRemaining(itemsRemaining);\n      //setItemsRedeemed(itemsRedeemed);\n      setIsActive(false);\n\n      setIsSoldOut(itemsRemaining === 0);\n      setStartDate(goLiveDate);\n      setCandyMachine(candyMachine);\n    })();\n  }, [wallet, props.candyMachineId, props.connection]);\n\n  return (\n    <main>\n      {wallet && (\n        <p>Wallet: {shortenAddress(wallet.publicKey.toBase58() || \"\")}</p>\n      )}\n\n      {wallet && <p>Your SOL Balance: {(balance || 0).toLocaleString()} SOL</p>}\n\n  {wallet && <p>Total Available: {itemsRemaining} </p>}\n\n\n      <MintContainer>\n        {!wallet ? (\n          <ConnectButton>Connect Wallet</ConnectButton>\n        ) : (\n          <MintButton\n            disabled={isSoldOut || isMinting || !isActive}\n            onClick={onMint}\n            variant=\"contained\"\n          >\n            { \n            isSoldOut ? (\n              \"SOLD OUT\"\n            ) : isActive ? (\n              isMinting ? (\n                <CircularProgress />\n              ) : (\n                \"MINT\"\n              )\n            ) : (\n              <Countdown\n                date={startDate}\n                onMount={({ completed }) => completed && setIsActive(true)}\n                onComplete={() => setIsActive(true)}\n                renderer={renderCounter}\n              />\n            )}\n          </MintButton>\n        )}\n      </MintContainer>\n\n      <Snackbar\n        open={alertState.open}\n        autoHideDuration={6000}\n        onClose={() => setAlertState({ ...alertState, open: false })}\n      >\n        <Alert\n          onClose={() => setAlertState({ ...alertState, open: false })}\n          severity={alertState.severity}\n        >\n          {alertState.message}\n        </Alert>\n      </Snackbar>\n    </main>\n  );\n};\n\ninterface AlertState {\n  open: boolean;\n  message: string;\n  severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\n}\n\nconst renderCounter = ({ days, hours, minutes, seconds, completed }: any) => {\n  return (\n    <CounterText>\n      {days} Days ,{hours} hours, {minutes} minutes, {seconds} seconds\n    </CounterText>\n  );\n};\n\nexport default Home;","/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/hippofamilynft-presale/src/candy-machine.ts",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":11,"column":10,"nodeType":"143","messageId":"144","endLine":11,"endColumn":25},{"ruleId":"141","severity":1,"message":"145","line":11,"column":27,"nodeType":"143","messageId":"144","endLine":11,"endColumn":45},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"146","severity":1,"message":"147","line":19,"column":21,"nodeType":"148","messageId":"149","endLine":19,"endColumn":77,"fix":"150"},{"ruleId":"146","severity":1,"message":"147","line":24,"column":21,"nodeType":"148","messageId":"149","endLine":24,"endColumn":82,"fix":"151"},{"ruleId":"146","severity":1,"message":"147","line":29,"column":21,"nodeType":"148","messageId":"149","endLine":29,"endColumn":84,"fix":"152"},{"ruleId":"153","severity":1,"message":"154","line":11,"column":9,"nodeType":"155","messageId":"156","endLine":11,"endColumn":11},{"ruleId":"141","severity":1,"message":"157","line":75,"column":10,"nodeType":"143","messageId":"144","endLine":75,"endColumn":24},{"ruleId":"141","severity":1,"message":"158","line":77,"column":10,"nodeType":"143","messageId":"144","endLine":77,"endColumn":24},{"ruleId":"153","severity":1,"message":"154","line":6,"column":9,"nodeType":"155","messageId":"156","endLine":6,"endColumn":11},{"ruleId":"141","severity":1,"message":"157","line":75,"column":10,"nodeType":"143","messageId":"144","endLine":75,"endColumn":24},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"@typescript-eslint/no-unused-vars","'landingPageData' is assigned a value but never used.","Identifier","unusedVar","'setLandingPageData' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"161","text":"162"},{"range":"163","text":"162"},{"range":"164","text":"162"},"no-empty-pattern","Unexpected empty array pattern.","ArrayPattern","unexpected","'itemsAvailable' is assigned a value but never used.","'itemsRemaining' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[686,686]," rel=\"noreferrer\"",[928,928],[1172,1172]]