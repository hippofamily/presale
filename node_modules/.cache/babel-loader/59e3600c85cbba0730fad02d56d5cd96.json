{"ast":null,"code":"var _jsxFileName = \"/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/candy-machine-mint/src/components/header.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useMemo } from \"react\";\nimport Home from \"../Home\";\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\nimport * as anchor from \"@project-serum/anchor\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport { getPhantomWallet, getSolflareWallet, getSolletWallet } from \"@solana/wallet-adapter-wallets\";\nimport { ConnectionProvider, WalletProvider } from \"@solana/wallet-adapter-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst treasury = new anchor.web3.PublicKey(process.env.REACT_APP_TREASURY_ADDRESS);\nconst config = new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_CONFIG);\nconst candyMachineId = new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_ID);\nconst network = process.env.REACT_APP_SOLANA_NETWORK;\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST;\nconst connection = new anchor.web3.Connection(rpcHost);\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE, 10);\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\n\nconst Header = () => {\n  _s();\n\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n  const wallets = useMemo(() => [getPhantomWallet(), getSolflareWallet(), getSolletWallet()], []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      id: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"intro\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-xs-12 col-md-6\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"img/hippo-gif.gif\",\n                  className: \"img-responsive\",\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConnectionProvider, {\n        endpoint: endpoint,\n        children: /*#__PURE__*/_jsxDEV(WalletProvider, {\n          wallets: wallets,\n          autoConnect: true,\n          children: /*#__PURE__*/_jsxDEV(WalletDialogProvider, {\n            children: /*#__PURE__*/_jsxDEV(Home, {\n              candyMachineId: candyMachineId,\n              config: config,\n              connection: connection,\n              startDate: startDateSeed,\n              treasury: treasury,\n              txTimeout: txTimeout\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Header, \"RNaTq20PjYTGasfEtgZ8qKkPMD0=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/candy-machine-mint/src/components/header.tsx"],"names":["React","useMemo","Home","WalletDialogProvider","anchor","clusterApiUrl","getPhantomWallet","getSolflareWallet","getSolletWallet","ConnectionProvider","WalletProvider","treasury","web3","PublicKey","process","env","REACT_APP_TREASURY_ADDRESS","config","REACT_APP_CANDY_MACHINE_CONFIG","candyMachineId","REACT_APP_CANDY_MACHINE_ID","network","REACT_APP_SOLANA_NETWORK","rpcHost","REACT_APP_SOLANA_RPC_HOST","connection","Connection","startDateSeed","parseInt","REACT_APP_CANDY_START_DATE","txTimeout","Header","endpoint","wallets"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useMemo } from \"react\";\nimport Home from \"../Home\";\n\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\n\nimport * as anchor from \"@project-serum/anchor\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport {\n  getPhantomWallet,\n  getSolflareWallet,\n  getSolletWallet,\n} from \"@solana/wallet-adapter-wallets\";\n\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from \"@solana/wallet-adapter-react\";\nconst treasury = new anchor.web3.PublicKey(\n  process.env.REACT_APP_TREASURY_ADDRESS!\n);\n\nconst config = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_CONFIG!\n);\n\nconst candyMachineId = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_ID!\n);\n\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\n\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\nconst connection = new anchor.web3.Connection(rpcHost);\n\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\n\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\n\nconst Header = () => {\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n\n  const wallets = useMemo(\n    () => [getPhantomWallet(), getSolflareWallet(), getSolletWallet()],\n    []\n  );\n\n  return (\n    <div>\n      <header id=\"header\">\n        <div className=\"intro\">\n          <div className=\"overlay\">\n            <div className=\"container\">\n              <div className=\"row\">\n                \n              <div className=\"col-xs-12 col-md-6\">\n            \n            <img src=\"img/hippo-gif.gif\" className=\"img-responsive\" alt=\"\" />\n          </div>\n               \n              </div>\n            </div>\n          </div>\n        </div>\n        <ConnectionProvider endpoint={endpoint}>\n                      <WalletProvider wallets={wallets} autoConnect>\n                        <WalletDialogProvider>\n                          <Home\n                            candyMachineId={candyMachineId}\n                            config={config}\n                            connection={connection}\n                            startDate={startDateSeed}\n                            treasury={treasury}\n                            txTimeout={txTimeout}\n                          />\n                        </WalletDialogProvider>\n                      </WalletProvider>\n                    </ConnectionProvider>\n      </header>\n    </div>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}