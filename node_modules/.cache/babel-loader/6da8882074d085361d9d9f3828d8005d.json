{"ast":null,"code":"var _jsxFileName = \"/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/candy-machine-mint/src/App.tsx\";\nimport React from \"react\";\nimport Navbar from \"./components/navbar\";\nimport Header from \"./components/header\";\nimport * as anchor from \"@project-serum/anchor\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst candyMachineId = new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_ID);\nconst network = process.env.REACT_APP_SOLANA_NETWORK;\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST;\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE, 10);\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/candy-machine-mint/src/App.tsx"],"names":["React","Navbar","Header","anchor","candyMachineId","web3","PublicKey","process","env","REACT_APP_CANDY_MACHINE_ID","network","REACT_APP_SOLANA_NETWORK","rpcHost","REACT_APP_SOLANA_RPC_HOST","startDateSeed","parseInt","REACT_APP_CANDY_START_DATE","txTimeout","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAQC,MAAR,MAAoB,qBAApB;AACA,OAAQC,MAAR,MAAqB,qBAArB;AAEA,OAAO,KAAKC,MAAZ,MAAwB,uBAAxB;AAIA,OAAO,WAAP;;AAGA,MAAMC,cAAc,GAAG,IAAID,MAAM,CAACE,IAAP,CAAYC,SAAhB,CACrBC,OAAO,CAACC,GAAR,CAAYC,0BADS,CAAvB;AAIA,MAAMC,OAAO,GAAGH,OAAO,CAACC,GAAR,CAAYG,wBAA5B;AAEA,MAAMC,OAAO,GAAGL,OAAO,CAACC,GAAR,CAAYK,yBAA5B;AAEA,MAAMC,aAAa,GAAGC,QAAQ,CAACR,OAAO,CAACC,GAAR,CAAYQ,0BAAb,EAA0C,EAA1C,CAA9B;AAEA,MAAMC,SAAS,GAAG,KAAlB,C,CAAyB;;AAGzB,MAAMC,GAAG,GAAG,MAAM;AAGhB,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAVD;;KAAMA,G;AAYN,eAAeA,GAAf","sourcesContent":["import React from \"react\"\nimport { useMemo } from \"react\";\n\nimport  Navbar from \"./components/navbar\";\nimport  Header  from \"./components/header\";\n\nimport * as anchor from \"@project-serum/anchor\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\n\nimport \"./App.css\";\n\n\nconst candyMachineId = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_ID!\n);\n\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\n\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\n\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\n\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\n\n\nconst App = () => {\n\n\n  return (\n    <div>\n      <Navbar />\n      <Header />\n\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}