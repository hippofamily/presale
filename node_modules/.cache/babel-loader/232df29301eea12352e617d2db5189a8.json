{"ast":null,"code":"import\"./App.css\";import{useMemo}from\"react\";import Home from\"./Home\";import*as anchor from\"@project-serum/anchor\";import{clusterApiUrl}from\"@solana/web3.js\";import{getPhantomWallet,getSolflareWallet,getSolletWallet}from\"@solana/wallet-adapter-wallets\";import{ConnectionProvider,WalletProvider}from\"@solana/wallet-adapter-react\";import{WalletDialogProvider}from\"@solana/wallet-adapter-material-ui\";import{jsx as _jsx}from\"react/jsx-runtime\";var treasury=new anchor.web3.PublicKey(process.env.REACT_APP_TREASURY_ADDRESS);var config=new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_CONFIG);var candyMachineId=new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_ID);var network=process.env.REACT_APP_SOLANA_NETWORK;var rpcHost=process.env.REACT_APP_SOLANA_RPC_HOST;var connection=new anchor.web3.Connection(rpcHost);var startDateSeed=parseInt(process.env.REACT_APP_CANDY_START_DATE,10);var txTimeout=30000;// milliseconds (confirm this works for your project)\nvar App=function App(){var endpoint=useMemo(function(){return clusterApiUrl(network);},[]);var wallets=useMemo(function(){return[getPhantomWallet(),getSolflareWallet(),getSolletWallet()];},[]);return/*#__PURE__*/_jsx(ConnectionProvider,{endpoint:endpoint,children:/*#__PURE__*/_jsx(WalletProvider,{wallets:wallets,autoConnect:true,children:/*#__PURE__*/_jsx(WalletDialogProvider,{children:/*#__PURE__*/_jsx(Home,{candyMachineId:candyMachineId,config:config,connection:connection,startDate:startDateSeed,treasury:treasury,txTimeout:txTimeout})})})});};export default App;","map":{"version":3,"sources":["/Users/silvananggia/Documents/Hell/HellLab/HippoNFT/candy-machine-mint/src/App.tsx"],"names":["useMemo","Home","anchor","clusterApiUrl","getPhantomWallet","getSolflareWallet","getSolletWallet","ConnectionProvider","WalletProvider","WalletDialogProvider","treasury","web3","PublicKey","process","env","REACT_APP_TREASURY_ADDRESS","config","REACT_APP_CANDY_MACHINE_CONFIG","candyMachineId","REACT_APP_CANDY_MACHINE_ID","network","REACT_APP_SOLANA_NETWORK","rpcHost","REACT_APP_SOLANA_RPC_HOST","connection","Connection","startDateSeed","parseInt","REACT_APP_CANDY_START_DATE","txTimeout","App","endpoint","wallets"],"mappings":"AAAA,MAAO,WAAP,CACA,OAASA,OAAT,KAAwB,OAAxB,CAEA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CAEA,MAAO,GAAKC,CAAAA,MAAZ,KAAwB,uBAAxB,CACA,OAASC,aAAT,KAA8B,iBAA9B,CAEA,OACEC,gBADF,CAEEC,iBAFF,CAGEC,eAHF,KAIO,gCAJP,CAMA,OACEC,kBADF,CAEEC,cAFF,KAGO,8BAHP,CAKA,OAASC,oBAAT,KAAqC,oCAArC,C,2CAEA,GAAMC,CAAAA,QAAQ,CAAG,GAAIR,CAAAA,MAAM,CAACS,IAAP,CAAYC,SAAhB,CACfC,OAAO,CAACC,GAAR,CAAYC,0BADG,CAAjB,CAIA,GAAMC,CAAAA,MAAM,CAAG,GAAId,CAAAA,MAAM,CAACS,IAAP,CAAYC,SAAhB,CACbC,OAAO,CAACC,GAAR,CAAYG,8BADC,CAAf,CAIA,GAAMC,CAAAA,cAAc,CAAG,GAAIhB,CAAAA,MAAM,CAACS,IAAP,CAAYC,SAAhB,CACrBC,OAAO,CAACC,GAAR,CAAYK,0BADS,CAAvB,CAIA,GAAMC,CAAAA,OAAO,CAAGP,OAAO,CAACC,GAAR,CAAYO,wBAA5B,CAEA,GAAMC,CAAAA,OAAO,CAAGT,OAAO,CAACC,GAAR,CAAYS,yBAA5B,CACA,GAAMC,CAAAA,UAAU,CAAG,GAAItB,CAAAA,MAAM,CAACS,IAAP,CAAYc,UAAhB,CAA2BH,OAA3B,CAAnB,CAEA,GAAMI,CAAAA,aAAa,CAAGC,QAAQ,CAACd,OAAO,CAACC,GAAR,CAAYc,0BAAb,CAA0C,EAA1C,CAA9B,CAEA,GAAMC,CAAAA,SAAS,CAAG,KAAlB,CAAyB;AAEzB,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CAChB,GAAMC,CAAAA,QAAQ,CAAG/B,OAAO,CAAC,iBAAMG,CAAAA,aAAa,CAACiB,OAAD,CAAnB,EAAD,CAA+B,EAA/B,CAAxB,CAEA,GAAMY,CAAAA,OAAO,CAAGhC,OAAO,CACrB,iBAAM,CAACI,gBAAgB,EAAjB,CAAqBC,iBAAiB,EAAtC,CAA0CC,eAAe,EAAzD,CAAN,EADqB,CAErB,EAFqB,CAAvB,CAKA,mBACE,KAAC,kBAAD,EAAoB,QAAQ,CAAEyB,QAA9B,uBACE,KAAC,cAAD,EAAgB,OAAO,CAAEC,OAAzB,CAAkC,WAAW,KAA7C,uBACE,KAAC,oBAAD,wBACE,KAAC,IAAD,EACE,cAAc,CAAEd,cADlB,CAEE,MAAM,CAAEF,MAFV,CAGE,UAAU,CAAEQ,UAHd,CAIE,SAAS,CAAEE,aAJb,CAKE,QAAQ,CAAEhB,QALZ,CAME,SAAS,CAAEmB,SANb,EADF,EADF,EADF,EADF,CAgBD,CAxBD,CA0BA,cAAeC,CAAAA,GAAf","sourcesContent":["import \"./App.css\";\nimport { useMemo } from \"react\";\n\nimport Home from \"./Home\";\n\nimport * as anchor from \"@project-serum/anchor\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport {\n  getPhantomWallet,\n  getSolflareWallet,\n  getSolletWallet,\n} from \"@solana/wallet-adapter-wallets\";\n\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from \"@solana/wallet-adapter-react\";\n\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\n\nconst treasury = new anchor.web3.PublicKey(\n  process.env.REACT_APP_TREASURY_ADDRESS!\n);\n\nconst config = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_CONFIG!\n);\n\nconst candyMachineId = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_ID!\n);\n\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\n\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\nconst connection = new anchor.web3.Connection(rpcHost);\n\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\n\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\n\nconst App = () => {\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n\n  const wallets = useMemo(\n    () => [getPhantomWallet(), getSolflareWallet(), getSolletWallet()],\n    []\n  );\n\n  return (\n    <ConnectionProvider endpoint={endpoint}>\n      <WalletProvider wallets={wallets} autoConnect>\n        <WalletDialogProvider>\n          <Home\n            candyMachineId={candyMachineId}\n            config={config}\n            connection={connection}\n            startDate={startDateSeed}\n            treasury={treasury}\n            txTimeout={txTimeout}\n          />\n        </WalletDialogProvider>\n      </WalletProvider>\n    </ConnectionProvider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}